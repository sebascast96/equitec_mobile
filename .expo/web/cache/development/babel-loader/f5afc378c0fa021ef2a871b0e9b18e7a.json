{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar typographyStyle = \"\";\n\nvar Typography = function Typography(props) {\n  var style = props.style,\n      type = props.type,\n      text = props.text,\n      _props$color = props.color,\n      color = _props$color === void 0 ? '#212429' : _props$color;\n\n  switch (type) {\n    case 'h1':\n      typographyStyle = styles.h1;\n      break;\n\n    case 'h2':\n      typographyStyle = styles.h2;\n      break;\n\n    case 'h3':\n      typographyStyle = styles.h3;\n      break;\n\n    case 'h4':\n      typographyStyle = styles.h4;\n      break;\n\n    case 'h5':\n      typographyStyle = styles.h5;\n      break;\n\n    case 'paragraph':\n      typographyStyle = styles.paragraph;\n      break;\n\n    case 'small':\n      typographyStyle = styles.SMALL;\n      break;\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsx(Text, {\n      style: [typographyStyle, {\n        color: \"\" + color\n      }, style],\n      children: text\n    })\n  });\n};\n\nexport default Typography;","map":{"version":3,"names":["React","styles","typographyStyle","Typography","props","style","type","text","color","h1","h2","h3","h4","h5","paragraph","SMALL"],"sources":["/Users/macintosh/Documents/Proyectos/equitec_mobile/src/components/Typography/typography.jsx"],"sourcesContent":["import React from 'react';\nimport {Text} from 'react-native';\nimport {styles} from './style';\n\nlet typographyStyle = ``;\n\nconst Typography = props => {\n  const {style, type, text, color = '#212429'} = props;\n\n  switch (type) {\n    case 'h1':\n      typographyStyle = styles.h1;\n      break;\n    case 'h2':\n      typographyStyle = styles.h2;\n      break;\n    case 'h3':\n      typographyStyle = styles.h3;\n      break;\n    case 'h4':\n      typographyStyle = styles.h4;\n      break;\n    case 'h5':\n      typographyStyle = styles.h5;\n      break;\n    case 'paragraph':\n      typographyStyle = styles.paragraph;\n      break;\n    case 'small':\n      typographyStyle = styles.SMALL;\n      break;\n  }\n  return (\n    <>\n      <Text style={[typographyStyle, {color: `${color}`}, style]}>{text}</Text>\n    </>\n  );\n};\n\nexport default Typography;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAAQC,MAAR;;;AAEA,IAAIC,eAAe,KAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;EAC1B,IAAOC,KAAP,GAA+CD,KAA/C,CAAOC,KAAP;EAAA,IAAcC,IAAd,GAA+CF,KAA/C,CAAcE,IAAd;EAAA,IAAoBC,IAApB,GAA+CH,KAA/C,CAAoBG,IAApB;EAAA,mBAA+CH,KAA/C,CAA0BI,KAA1B;EAAA,IAA0BA,KAA1B,6BAAkC,SAAlC;;EAEA,QAAQF,IAAR;IACE,KAAK,IAAL;MACEJ,eAAe,GAAGD,MAAM,CAACQ,EAAzB;MACA;;IACF,KAAK,IAAL;MACEP,eAAe,GAAGD,MAAM,CAACS,EAAzB;MACA;;IACF,KAAK,IAAL;MACER,eAAe,GAAGD,MAAM,CAACU,EAAzB;MACA;;IACF,KAAK,IAAL;MACET,eAAe,GAAGD,MAAM,CAACW,EAAzB;MACA;;IACF,KAAK,IAAL;MACEV,eAAe,GAAGD,MAAM,CAACY,EAAzB;MACA;;IACF,KAAK,WAAL;MACEX,eAAe,GAAGD,MAAM,CAACa,SAAzB;MACA;;IACF,KAAK,OAAL;MACEZ,eAAe,GAAGD,MAAM,CAACc,KAAzB;MACA;EArBJ;;EAuBA,OACE;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAE,CAACb,eAAD,EAAkB;QAACM,KAAK,OAAKA;MAAX,CAAlB,EAAuCH,KAAvC,CAAb;MAAA,UAA6DE;IAA7D;EADF,EADF;AAKD,CA/BD;;AAiCA,eAAeJ,UAAf"},"metadata":{},"sourceType":"module"}