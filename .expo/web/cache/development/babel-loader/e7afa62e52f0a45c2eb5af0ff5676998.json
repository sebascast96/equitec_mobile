{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport LoginComponent from \"./Login.component\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Constants } from \"../../common\";\nimport { login } from \"../../client/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handlePressNext = function _callee() {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(user, password);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login(user, password));\n\n          case 3:\n            res = _context.sent;\n            console.log(res);\n\n            if (res.data == \"\") {\n              console.log(\"nel\");\n            } else {\n              navigation.navigate(Constants.screens.Home);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(LoginComponent, {\n    handlePressNext: handlePressNext,\n    user: user,\n    password: password\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","styles","LoginComponent","useNavigation","Constants","login","LoginScreen","props","navigation","user","setUser","password","setPassword","handlePressNext","console","log","res","data","navigate","screens","Home"],"sources":["C:/laragon/www/equitec_mobile/src/screens/Login/Login.screen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport LoginComponent from \"./Login.component\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Constants } from \"../../common\";\r\nimport { login } from \"../../client/index\";\r\nconst LoginScreen = (props) => {\r\n  const navigation = useNavigation();\r\n\r\n  const[user, setUser]=useState(\"\");\r\n  const[password, setPassword]=useState(\"\");\r\n\r\n  const handlePressNext = async () => {\r\n    console.log(user,password);\r\n    const res = await login(user, password);\r\n    console.log(res);\r\n    if (res.data == \"\") {\r\n      console.log(\"nel\");\r\n    } else {\r\n      navigation.navigate(Constants.screens.Home);\r\n    }\r\n  };\r\n  return <LoginComponent handlePressNext={handlePressNext} user={user} password={password}/>;\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT;AACA,SAASC,KAAT;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EAC7B,IAAMC,UAAU,GAAGL,aAAa,EAAhC;;EAEA,gBAAqBH,QAAQ,CAAC,EAAD,CAA7B;EAAA;EAAA,IAAMS,IAAN;EAAA,IAAYC,OAAZ;;EACA,iBAA6BV,QAAQ,CAAC,EAAD,CAArC;EAAA;EAAA,IAAMW,QAAN;EAAA,IAAgBC,WAAhB;;EAEA,IAAMC,eAAe,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACtBC,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAiBE,QAAjB;YADsB;YAAA,iCAEJN,KAAK,CAACI,IAAD,EAAOE,QAAP,CAFD;;UAAA;YAEhBK,GAFgB;YAGtBF,OAAO,CAACC,GAAR,CAAYC,GAAZ;;YACA,IAAIA,GAAG,CAACC,IAAJ,IAAY,EAAhB,EAAoB;cAClBH,OAAO,CAACC,GAAR,CAAY,KAAZ;YACD,CAFD,MAEO;cACLP,UAAU,CAACU,QAAX,CAAoBd,SAAS,CAACe,OAAV,CAAkBC,IAAtC;YACD;;UARqB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAxB;;EAUA,OAAO,KAAC,cAAD;IAAgB,eAAe,EAAEP,eAAjC;IAAkD,IAAI,EAAEJ,IAAxD;IAA8D,QAAQ,EAAEE;EAAxE,EAAP;AACD,CAjBD;;AAmBA,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}