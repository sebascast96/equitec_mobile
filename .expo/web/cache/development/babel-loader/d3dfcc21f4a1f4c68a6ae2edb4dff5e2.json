{"ast":null,"code":"import React from \"react\";\nimport styles from \"./styles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport Button from \"../../components/Button\";\nimport { Constants } from \"../../common\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AlertComponent from \"../../components/Alerts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginComponent = function LoginComponent(props) {\n  var handlePressNext = props.handlePressNext,\n      user = props.user,\n      password = props.password,\n      setUser = props.setUser,\n      setPassword = props.setPassword,\n      invalidModal = props.invalidModal,\n      acceptModal = props.acceptModal;\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(AlertComponent, {\n      modalParams: invalidModal,\n      handlePressPrimary: acceptModal\n    }), _jsx(View, {\n      style: styles.loginScreen,\n      children: _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsxs(View, {\n          style: styles.center,\n          children: [_jsx(Image, {\n            style: styles.tinyLogo,\n            source: require(\"../../img/logo.png\")\n          }), _jsx(Text, {\n            style: styles.headertittle,\n            children: \"HOLA!\"\n          }), _jsx(Text, {\n            style: styles.headersubtittle,\n            children: \"Inicie sesi\\xF3n para continuar\"\n          })]\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"USUARIO\"\n        }), _jsx(TextInput, {\n          style: styles.inputUserStyle,\n          autoCorrect: false,\n          placeholder: \"Username\",\n          value: user,\n          onChangeText: function onChangeText(text) {\n            setUser(text);\n          }\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"CONTRASE\\xD1A\"\n        }), _jsxs(View, {\n          style: styles.passwordContainer,\n          children: [_jsx(TextInput, {\n            style: styles.inputStyle,\n            autoCorrect: false,\n            secureTextEntry: true,\n            value: password,\n            keyboardType: \"email-address\",\n            onChangeText: function onChangeText(text) {\n              setPassword(text);\n            },\n            placeholder: \"Password\"\n          }), _jsx(Ionicons, {\n            style: styles.icon,\n            name: \"eye-off\",\n            color: \"#000\",\n            size: 30\n          })]\n        }), _jsx(View, {\n          style: styles.center,\n          children: _jsx(Button, {\n            handlePress: handlePressNext,\n            buttonText: Constants.language.generic.login\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default LoginComponent;","map":{"version":3,"names":["React","styles","SafeAreaProvider","Button","Constants","Ionicons","AlertComponent","LoginComponent","props","handlePressNext","user","password","setUser","setPassword","invalidModal","acceptModal","loginScreen","loginContainer","center","tinyLogo","require","headertittle","headersubtittle","text","inputUserStyle","passwordContainer","inputStyle","icon","language","generic","login"],"sources":["C:/laragon/www/equitec_mobile/src/screens/Login/Login.component.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport { View, Text, TextInput, Image } from \"react-native\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\nimport Button from \"../../components/Button\";\r\nimport { Constants } from \"../../common\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport AlertComponent from \"../../components/Alerts\";\r\n\r\nconst LoginComponent = (props) => {\r\n  const {\r\n    handlePressNext,\r\n    user,\r\n    password,\r\n    setUser,\r\n    setPassword,\r\n    invalidModal,\r\n    acceptModal,\r\n  } = props;\r\n  return (\r\n    <SafeAreaProvider>\r\n      <AlertComponent\r\n        modalParams={invalidModal}\r\n        handlePressPrimary={acceptModal}\r\n      />\r\n      <View style={styles.loginScreen}>\r\n        <View style={styles.loginContainer}>\r\n          <View style={styles.center}>\r\n            <Image\r\n              style={styles.tinyLogo}\r\n              source={require(\"../../img/logo.png\")}\r\n            />\r\n            <Text style={styles.headertittle}>HOLA!</Text>\r\n            <Text style={styles.headersubtittle}>\r\n              Inicie sesión para continuar\r\n            </Text>\r\n          </View>\r\n          <Text style={styles.text}>USUARIO</Text>\r\n          <TextInput\r\n            style={styles.inputUserStyle}\r\n            autoCorrect={false}\r\n            placeholder=\"Username\"\r\n            value={user}\r\n            onChangeText={(text) => {\r\n              setUser(text);\r\n            }}\r\n          />\r\n          <Text style={styles.text}>CONTRASEÑA</Text>\r\n          <View style={styles.passwordContainer}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              autoCorrect={false}\r\n              secureTextEntry\r\n              value={password}\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(text) => {\r\n                setPassword(text);\r\n              }}\r\n              placeholder=\"Password\"\r\n            />\r\n            <Ionicons\r\n              style={styles.icon}\r\n              name=\"eye-off\"\r\n              color=\"#000\"\r\n              size={30}\r\n            />\r\n          </View>\r\n          <View style={styles.center}>\r\n            <Button\r\n              handlePress={handlePressNext}\r\n              buttonText={Constants.language.generic.login}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaProvider>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;;;;;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,MAAP;AACA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,cAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,IACEC,eADF,GAQID,KARJ,CACEC,eADF;EAAA,IAEEC,IAFF,GAQIF,KARJ,CAEEE,IAFF;EAAA,IAGEC,QAHF,GAQIH,KARJ,CAGEG,QAHF;EAAA,IAIEC,OAJF,GAQIJ,KARJ,CAIEI,OAJF;EAAA,IAKEC,WALF,GAQIL,KARJ,CAKEK,WALF;EAAA,IAMEC,YANF,GAQIN,KARJ,CAMEM,YANF;EAAA,IAOEC,WAPF,GAQIP,KARJ,CAOEO,WAPF;EASA,OACE,MAAC,gBAAD;IAAA,WACE,KAAC,cAAD;MACE,WAAW,EAAED,YADf;MAEE,kBAAkB,EAAEC;IAFtB,EADF,EAKE,KAAC,IAAD;MAAM,KAAK,EAAEd,MAAM,CAACe,WAApB;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEf,MAAM,CAACgB,cAApB;QAAA,WACE,MAAC,IAAD;UAAM,KAAK,EAAEhB,MAAM,CAACiB,MAApB;UAAA,WACE,KAAC,KAAD;YACE,KAAK,EAAEjB,MAAM,CAACkB,QADhB;YAEE,MAAM,EAAEC,OAAO;UAFjB,EADF,EAKE,KAAC,IAAD;YAAM,KAAK,EAAEnB,MAAM,CAACoB,YAApB;YAAA;UAAA,EALF,EAME,KAAC,IAAD;YAAM,KAAK,EAAEpB,MAAM,CAACqB,eAApB;YAAA;UAAA,EANF;QAAA,EADF,EAWE,KAAC,IAAD;UAAM,KAAK,EAAErB,MAAM,CAACsB,IAApB;UAAA;QAAA,EAXF,EAYE,KAAC,SAAD;UACE,KAAK,EAAEtB,MAAM,CAACuB,cADhB;UAEE,WAAW,EAAE,KAFf;UAGE,WAAW,EAAC,UAHd;UAIE,KAAK,EAAEd,IAJT;UAKE,YAAY,EAAE,sBAACa,IAAD,EAAU;YACtBX,OAAO,CAACW,IAAD,CAAP;UACD;QAPH,EAZF,EAqBE,KAAC,IAAD;UAAM,KAAK,EAAEtB,MAAM,CAACsB,IAApB;UAAA;QAAA,EArBF,EAsBE,MAAC,IAAD;UAAM,KAAK,EAAEtB,MAAM,CAACwB,iBAApB;UAAA,WACE,KAAC,SAAD;YACE,KAAK,EAAExB,MAAM,CAACyB,UADhB;YAEE,WAAW,EAAE,KAFf;YAGE,eAAe,MAHjB;YAIE,KAAK,EAAEf,QAJT;YAKE,YAAY,EAAC,eALf;YAME,YAAY,EAAE,sBAACY,IAAD,EAAU;cACtBV,WAAW,CAACU,IAAD,CAAX;YACD,CARH;YASE,WAAW,EAAC;UATd,EADF,EAYE,KAAC,QAAD;YACE,KAAK,EAAEtB,MAAM,CAAC0B,IADhB;YAEE,IAAI,EAAC,SAFP;YAGE,KAAK,EAAC,MAHR;YAIE,IAAI,EAAE;UAJR,EAZF;QAAA,EAtBF,EAyCE,KAAC,IAAD;UAAM,KAAK,EAAE1B,MAAM,CAACiB,MAApB;UAAA,UACE,KAAC,MAAD;YACE,WAAW,EAAET,eADf;YAEE,UAAU,EAAEL,SAAS,CAACwB,QAAV,CAAmBC,OAAnB,CAA2BC;UAFzC;QADF,EAzCF;MAAA;IADF,EALF;EAAA,EADF;AA0DD,CApED;;AAsEA,eAAevB,cAAf"},"metadata":{},"sourceType":"module"}