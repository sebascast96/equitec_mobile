{"ast":null,"code":"var XDate = require('xdate');\n\nexport function padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n\n  return n;\n}\nexport function xdateToData(date) {\n  var d = date instanceof XDate ? date : new XDate(date);\n  var dateString = toMarkingFormat(d);\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth() + 1,\n    day: d.getDate(),\n    timestamp: new XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\nexport function parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    return new XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    return new XDate(toMarkingFormat(d), true);\n  } else if (d.getTime) {\n    var dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return new XDate(dateString, true);\n  } else if (d.year) {\n    var _dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n\n    return new XDate(_dateString, true);\n  } else if (d) {\n    return new XDate(d, true);\n  }\n}\nexport function toMarkingFormat(d) {\n  if (!isNaN(d.getTime())) {\n    var year = \"\" + d.getFullYear();\n    var month = d.getMonth() + 1;\n    var doubleDigitMonth = month < 10 ? \"0\" + month : \"\" + month;\n    var day = d.getDate();\n    var doubleDigitDay = day < 10 ? \"0\" + day : \"\" + day;\n    return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n  }\n\n  return 'Invalid Date';\n}","map":{"version":3,"names":["XDate","require","padNumber","n","xdateToData","date","d","dateString","toMarkingFormat","year","getFullYear","month","getMonth","day","getDate","timestamp","getTime","parseDate","isNaN","doubleDigitMonth","doubleDigitDay"],"sources":["C:/laragon/www/equitec_mobile/node_modules/react-native-calendars/src/interface.js"],"sourcesContent":["const XDate = require('xdate');\nexport function padNumber(n) {\n    if (n < 10) {\n        return '0' + n;\n    }\n    return n;\n}\nexport function xdateToData(date) {\n    const d = date instanceof XDate ? date : new XDate(date);\n    const dateString = toMarkingFormat(d);\n    return {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n        timestamp: new XDate(dateString, true).getTime(),\n        dateString: dateString\n    };\n}\nexport function parseDate(d) {\n    if (!d) {\n        return;\n    }\n    else if (d.timestamp) {\n        // conventional data timestamp\n        return new XDate(d.timestamp, true);\n    }\n    else if (d instanceof XDate) {\n        // xdate\n        return new XDate(toMarkingFormat(d), true);\n    }\n    else if (d.getTime) {\n        // javascript date\n        const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n        return new XDate(dateString, true);\n    }\n    else if (d.year) {\n        const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n        return new XDate(dateString, true);\n    }\n    else if (d) {\n        // timestamp number or date formatted as string\n        return new XDate(d, true);\n    }\n}\nexport function toMarkingFormat(d) {\n    if (!isNaN(d.getTime())) {\n        const year = `${d.getFullYear()}`;\n        const month = d.getMonth() + 1;\n        const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n        const day = d.getDate();\n        const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n        return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n    }\n    return 'Invalid Date';\n}\n"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;EACzB,IAAIA,CAAC,GAAG,EAAR,EAAY;IACR,OAAO,MAAMA,CAAb;EACH;;EACD,OAAOA,CAAP;AACH;AACD,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAC9B,IAAMC,CAAC,GAAGD,IAAI,YAAYL,KAAhB,GAAwBK,IAAxB,GAA+B,IAAIL,KAAJ,CAAUK,IAAV,CAAzC;EACA,IAAME,UAAU,GAAGC,eAAe,CAACF,CAAD,CAAlC;EACA,OAAO;IACHG,IAAI,EAAEH,CAAC,CAACI,WAAF,EADH;IAEHC,KAAK,EAAEL,CAAC,CAACM,QAAF,KAAe,CAFnB;IAGHC,GAAG,EAAEP,CAAC,CAACQ,OAAF,EAHF;IAIHC,SAAS,EAAE,IAAIf,KAAJ,CAAUO,UAAV,EAAsB,IAAtB,EAA4BS,OAA5B,EAJR;IAKHT,UAAU,EAAEA;EALT,CAAP;AAOH;AACD,OAAO,SAASU,SAAT,CAAmBX,CAAnB,EAAsB;EACzB,IAAI,CAACA,CAAL,EAAQ;IACJ;EACH,CAFD,MAGK,IAAIA,CAAC,CAACS,SAAN,EAAiB;IAElB,OAAO,IAAIf,KAAJ,CAAUM,CAAC,CAACS,SAAZ,EAAuB,IAAvB,CAAP;EACH,CAHI,MAIA,IAAIT,CAAC,YAAYN,KAAjB,EAAwB;IAEzB,OAAO,IAAIA,KAAJ,CAAUQ,eAAe,CAACF,CAAD,CAAzB,EAA8B,IAA9B,CAAP;EACH,CAHI,MAIA,IAAIA,CAAC,CAACU,OAAN,EAAe;IAEhB,IAAMT,UAAU,GAAGD,CAAC,CAACI,WAAF,KAAkB,GAAlB,GAAwBR,SAAS,CAACI,CAAC,CAACM,QAAF,KAAe,CAAhB,CAAjC,GAAsD,GAAtD,GAA4DV,SAAS,CAACI,CAAC,CAACQ,OAAF,EAAD,CAAxF;IACA,OAAO,IAAId,KAAJ,CAAUO,UAAV,EAAsB,IAAtB,CAAP;EACH,CAJI,MAKA,IAAID,CAAC,CAACG,IAAN,EAAY;IACb,IAAMF,WAAU,GAAGD,CAAC,CAACG,IAAF,GAAS,GAAT,GAAeP,SAAS,CAACI,CAAC,CAACK,KAAH,CAAxB,GAAoC,GAApC,GAA0CT,SAAS,CAACI,CAAC,CAACO,GAAH,CAAtE;;IACA,OAAO,IAAIb,KAAJ,CAAUO,WAAV,EAAsB,IAAtB,CAAP;EACH,CAHI,MAIA,IAAID,CAAJ,EAAO;IAER,OAAO,IAAIN,KAAJ,CAAUM,CAAV,EAAa,IAAb,CAAP;EACH;AACJ;AACD,OAAO,SAASE,eAAT,CAAyBF,CAAzB,EAA4B;EAC/B,IAAI,CAACY,KAAK,CAACZ,CAAC,CAACU,OAAF,EAAD,CAAV,EAAyB;IACrB,IAAMP,IAAI,QAAMH,CAAC,CAACI,WAAF,EAAhB;IACA,IAAMC,KAAK,GAAGL,CAAC,CAACM,QAAF,KAAe,CAA7B;IACA,IAAMO,gBAAgB,GAAGR,KAAK,GAAG,EAAR,SAAiBA,KAAjB,QAA8BA,KAAvD;IACA,IAAME,GAAG,GAAGP,CAAC,CAACQ,OAAF,EAAZ;IACA,IAAMM,cAAc,GAAGP,GAAG,GAAG,EAAN,SAAeA,GAAf,QAA0BA,GAAjD;IACA,OAAOJ,IAAI,GAAG,GAAP,GAAaU,gBAAb,GAAgC,GAAhC,GAAsCC,cAA7C;EACH;;EACD,OAAO,cAAP;AACH"},"metadata":{},"sourceType":"module"}